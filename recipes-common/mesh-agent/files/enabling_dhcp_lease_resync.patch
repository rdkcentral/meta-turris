From ef63f5da7e27f707b543f19c09eda0f6fa0f2527 Mon Sep 17 00:00:00 2001
From: Simon Chung <simon.c.chung@accenture.com>
Date: Mon, 13 Jun 2022 11:35:42 +0100
Subject: [PATCH] enabling_dhcp_lease_resync

Change-Id: Iace5bdc85f58079195e09e96c6e9000fd9d76e3b
---
 source/MeshAgentSsp/cosa_mesh_apis.c | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/source/MeshAgentSsp/cosa_mesh_apis.c b/source/MeshAgentSsp/cosa_mesh_apis.c
index 9adb2fa..5ea2289 100644
--- a/source/MeshAgentSsp/cosa_mesh_apis.c
+++ b/source/MeshAgentSsp/cosa_mesh_apis.c
@@ -3820,7 +3820,9 @@ static void *Mesh_sysevent_handler(void *data)
     async_id_t mesh_enable_asyncid;
     async_id_t mesh_url_asyncid;
     async_id_t wifi_txRate_asyncid;
-
+#ifdef _PLATFORM_TURRIS_
+    async_id_t lease_resync_asyncid;
+#endif
     sysevent_set_options(sysevent_fd,     sysevent_token, meshSyncMsgArr[MESH_WIFI_RESET].sysStr,                     TUPLE_FLAG_EVENT);
     sysevent_setnotification(sysevent_fd, sysevent_token, meshSyncMsgArr[MESH_WIFI_RESET].sysStr,                     &wifi_init_asyncid);
     sysevent_set_options(sysevent_fd,     sysevent_token, meshSyncMsgArr[MESH_WIFI_SSID_NAME].sysStr,                 TUPLE_FLAG_EVENT);
@@ -3869,6 +3871,11 @@ static void *Mesh_sysevent_handler(void *data)
     sysevent_set_options(sysevent_fd,     sysevent_token, meshSyncMsgArr[MESH_WIFI_TXRATE].sysStr,                   TUPLE_FLAG_EVENT);
     sysevent_setnotification(sysevent_fd, sysevent_token, meshSyncMsgArr[MESH_WIFI_TXRATE].sysStr,                   &wifi_txRate_asyncid);
 
+#ifdef _PLATFORM_TURRIS_
+    sysevent_set_options(sysevent_fd,     sysevent_token, meshSyncMsgArr[MESH_DHCP_RESYNC_LEASES].sysStr,                   TUPLE_FLAG_EVENT);
+    sysevent_setnotification(sysevent_fd, sysevent_token, meshSyncMsgArr[MESH_DHCP_RESYNC_LEASES].sysStr,                   &lease_resync_asyncid);
+#endif
+
     for (;;)
     {
         unsigned char name[64], val[256];
@@ -5195,6 +5202,13 @@ static void *Mesh_sysevent_handler(void *data)
                     }
                 }
             }
+#ifdef _PLATFORM_TURRIS_
+            else if (strcmp(name, meshSyncMsgArr[MESH_DHCP_RESYNC_LEASES].sysStr)==0)
+            {
+                //This will handle sending lease information to plume for every new connection, without restarting the MeshAgent
+                Mesh_sendDhcpLeaseSync();
+            }
+#endif
             else
             {
                 MeshWarning("undefined event %s \n",name);
@@ -5274,7 +5288,6 @@ void Mesh_InitClientList()
     }
 }
 
-
 /**
  *  @brief Mesh Agent Initialize code
  *
-- 
2.28.0

