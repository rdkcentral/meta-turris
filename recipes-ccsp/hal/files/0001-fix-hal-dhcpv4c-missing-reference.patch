diff --git a/dhcpv4c_api.c b/dhcpv4c_api.c
index 979f367..37c2c12 100644
--- a/dhcpv4c_api.c
+++ b/dhcpv4c_api.c
@@ -879,7 +879,8 @@ INT dhcpv4c_get_ert_lease_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ert_lease_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_lease_time(pValue);
     }
 }
  
@@ -907,7 +908,8 @@ INT dhcpv4c_get_ert_remain_lease_time(UINT *pValue)
     }
     else
     {
-       return dhcp4c_get_ert_remain_lease_time(pValue);
+       return STATUS_SUCCESS;
+       //return dhcp4c_get_ert_remain_lease_time(pValue);
     }
 }
 
@@ -935,7 +937,8 @@ INT dhcpv4c_get_ert_remain_renew_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ert_remain_renew_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_remain_renew_time(pValue);
     }
 }
 
@@ -963,7 +966,8 @@ INT dhcpv4c_get_ert_remain_rebind_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ert_remain_rebind_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_remain_rebind_time(pValue);
     }
 }
 
@@ -991,7 +995,8 @@ INT dhcpv4c_get_ert_config_attempts(INT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ert_config_attempts(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_config_attempts(pValue);
     }
 }
 
@@ -1019,10 +1024,25 @@ INT dhcpv4c_get_ert_ifname(CHAR *pName)
     } 
     else 
     {
-        return dhcp4c_get_ert_ifname(pName);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_ifname(pName);
     }
 }
 
+/* Dnsmasq.leases file is generated and have all information of client leases. We check for clients whether connected ,
+ by checking dnsmaq.leases file  */
+
+static int check_client_connected()
+{
+   int connected_client=0;
+   FILE *fp;
+   char buf[256] = {0};
+   fp=popen("cat /nvram/dnsmasq.leases | awk '/10.0.0./ {print $3}' | wc -l","r");
+   if(fgets(buf,sizeof(buf),fp)!= NULL)
+      connected_client = atoi (buf);
+   return connected_client;
+}
+
 /* dhcpv4c_get_ert_fsm_state() function */
 /**
 * Description:Â Gets the E-Router DHCP State
@@ -1041,13 +1061,18 @@ INT dhcpv4c_get_ert_ifname(CHAR *pName)
 */
 INT dhcpv4c_get_ert_fsm_state(INT *pValue)
 {
-    if(pValue==NULL)
-    {    
-       return(STATUS_FAILURE);
+    int cli_connected=0;
+    cli_connected = check_client_connected();
+    if(pValue==NULL || cli_connected == 0)
+    {
+       *pValue = 1;
+           return STATUS_FAILURE;
     }
     else
     {
-       return dhcp4c_get_ert_fsm_state(pValue);
+       *pValue = 5; //5 indicates that status is bound. Client gets Ip addrs and changes its state to bound.
+        return STATUS_SUCCESS;
+       //return dhcp4c_get_ert_fsm_state(pValue);
     }
 }
 
@@ -1069,13 +1094,22 @@ INT dhcpv4c_get_ert_fsm_state(INT *pValue)
 */
 INT dhcpv4c_get_ert_ip_addr(UINT *pValue)
 {
-    if (NULL == pValue) 
-    {    
+    int cli_connected = 0;
+    cli_connected = check_client_connected();
+    if (NULL == pValue || cli_connected == 0)
+    {
         return STATUS_FAILURE;
-    } 
-    else 
+    }
+    else
     {
-        return dhcp4c_get_ert_ip_addr(pValue);
+        FILE *fr;
+        char *ptemp=pValue;
+        char buf[256] = {0};
+        fr= popen("head -n1 /nvram/dnsmasq.leases | awk '/10.0.0./ {print $3}'","r");
+        fgets(buf,sizeof(buf),fr);
+        sscanf(buf,"%d.%d.%d.%d",ptemp,ptemp+1,ptemp+2,ptemp+3);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_ip_addr(pValue);
     }
 }
 
@@ -1097,13 +1131,22 @@ INT dhcpv4c_get_ert_ip_addr(UINT *pValue)
 */
 INT dhcpv4c_get_ert_mask(UINT *pValue)
 {
-    if (NULL == pValue) 
-    {    
+    int cli_connected = 0;
+    cli_connected = check_client_connected();
+    if (NULL == pValue || cli_connected == 0)
+    {
         return STATUS_FAILURE;
-    } 
-    else 
+    }
+    else
     {
-        return dhcp4c_get_ert_mask(pValue);
+        FILE *fr;
+        char *ptemp=pValue;
+        char buf[256] = {0};
+        fr= popen("cat /var/dnsmasq.conf | awk '/dhcp-range/ {print $1}' | cut -d',' -f3","r");
+        fgets(buf,sizeof(buf),fr);
+        sscanf(buf,"%d.%d.%d.%d",ptemp,ptemp+1,ptemp+2,ptemp+3);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_mask(pValue);
     }
 }
 
@@ -1125,13 +1168,22 @@ INT dhcpv4c_get_ert_mask(UINT *pValue)
 */
 INT dhcpv4c_get_ert_gw(UINT *pValue)
 {
-    if(pValue==NULL)
-    {    
+    int cli_connected = 0;
+    cli_connected = check_client_connected();
+    if(pValue==NULL || cli_connected == 0)
+    {
        return(STATUS_FAILURE);
     }
     else
     {
-       return dhcp4c_get_ert_gw(pValue);
+        char buf[256] = {0};
+        FILE *fr;
+        char *ptemp=pValue;
+        fr= popen("syscfg get lan_ipaddr","r");
+        fgets(buf,sizeof(buf),fr);
+        sscanf(buf,"%d.%d.%d.%d",ptemp,ptemp+1,ptemp+2,ptemp+3);
+        return STATUS_SUCCESS;
+       //return dhcp4c_get_ert_gw(pValue);
     }
 }
 
@@ -1159,7 +1211,8 @@ INT dhcpv4c_get_ert_dns_svrs(dhcpv4c_ip_list_t *pList)
     } 
     else 
     {
-        return dhcp4c_get_ert_dns_svrs((ipv4AddrList_t*) pList);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_dns_svrs((ipv4AddrList_t*) pList);
     }
 }
 
@@ -1181,13 +1234,22 @@ INT dhcpv4c_get_ert_dns_svrs(dhcpv4c_ip_list_t *pList)
 */
 INT dhcpv4c_get_ert_dhcp_svr(UINT *pValue)
 {
-    if (NULL == pValue) 
-    {    
+    int cli_connected = 0;
+    cli_connected = check_client_connected();
+    if (NULL == pValue || cli_connected == 0)
+    {
         return STATUS_FAILURE;
-    } 
-    else 
+    }
+    else
     {
-        return dhcp4c_get_ert_dhcp_svr(pValue);
+        FILE *fr;
+        char buf[256] = {0};
+        char *ptemp=pValue;
+        fr= popen("syscfg get lan_ipaddr","r");
+        fgets(buf,sizeof(buf),fr);
+        sscanf(buf,"%d.%d.%d.%d",ptemp,ptemp+1,ptemp+2,ptemp+3);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ert_dhcp_svr(pValue);
     }
 }
 
@@ -1216,7 +1278,8 @@ INT dhcpv4c_get_ecm_lease_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_lease_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_lease_time(pValue);
     }
 }
 
@@ -1244,7 +1307,8 @@ INT dhcpv4c_get_ecm_remain_lease_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_remain_lease_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_remain_lease_time(pValue);
     }
 }
 
@@ -1272,7 +1336,8 @@ INT dhcpv4c_get_ecm_remain_renew_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_remain_renew_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_remain_renew_time(pValue);
     }
 }
 
@@ -1300,7 +1365,8 @@ INT dhcpv4c_get_ecm_remain_rebind_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_remain_rebind_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_remain_rebind_time(pValue);
     }
 }
 
@@ -1328,7 +1394,8 @@ INT dhcpv4c_get_ecm_config_attempts(INT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_config_attempts(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_config_attempts(pValue);
     }
 }
 
@@ -1356,7 +1423,8 @@ INT dhcpv4c_get_ecm_ifname(CHAR *pName)
     } 
     else 
     {
-        return dhcp4c_get_ecm_ifname(pName);;        
+        return STATUS_SUCCESS;        
+        //return dhcp4c_get_ecm_ifname(pName);;        
     }
 }
 
@@ -1384,7 +1452,8 @@ INT dhcpv4c_get_ecm_fsm_state(INT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_fsm_state(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_fsm_state(pValue);
     }
 }
 
@@ -1412,7 +1481,8 @@ INT dhcpv4c_get_ecm_ip_addr(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_ip_addr(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_ip_addr(pValue);
     }
 }
 
@@ -1440,7 +1510,8 @@ INT dhcpv4c_get_ecm_mask(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_mask(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_mask(pValue);
     }
 }
 
@@ -1468,7 +1539,8 @@ INT dhcpv4c_get_ecm_gw(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_gw(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_gw(pValue);
     }
 }
 
@@ -1496,7 +1568,8 @@ INT dhcpv4c_get_ecm_dns_svrs(dhcpv4c_ip_list_t *pList)
     } 
     else 
     {
-        return dhcp4c_get_ecm_dns_svrs((ipv4AddrList_t*) pList);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_dns_svrs((ipv4AddrList_t*) pList);
     }
 }
 
@@ -1524,7 +1597,8 @@ INT dhcpv4c_get_ecm_dhcp_svr(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_ecm_dhcp_svr(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_ecm_dhcp_svr(pValue);
     }
 }
 
@@ -1553,7 +1627,8 @@ INT dhcpv4c_get_emta_remain_lease_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_emta_remain_lease_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_emta_remain_lease_time(pValue);
     }
 }
 
@@ -1581,7 +1656,8 @@ INT dhcpv4c_get_emta_remain_renew_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_emta_remain_renew_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_emta_remain_renew_time(pValue);
     }
 }
 
@@ -1609,7 +1685,8 @@ INT dhcpv4c_get_emta_remain_rebind_time(UINT *pValue)
     } 
     else 
     {
-        return dhcp4c_get_emta_remain_rebind_time(pValue);
+        return STATUS_SUCCESS;
+        //return dhcp4c_get_emta_remain_rebind_time(pValue);
     }
 }
 
