From ddd180b6ada9f079d406f230eede76de014cc3ea Mon Sep 17 00:00:00 2001
From: Simon Chung <simon.c.chung@accenture.com>
Date: Mon, 20 Sep 2021 16:01:34 +0100
Subject: [PATCH] openssl-1.1.x-compatibility-in-HMAC-functions

Change-Id: Iafaed6c19dd16121aeca6e9f114e76c96a20beaf
---
 .../TR-181/board_sbapi/cosa_users_apis.c      | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/source-arm/TR-181/board_sbapi/cosa_users_apis.c b/source-arm/TR-181/board_sbapi/cosa_users_apis.c
index 4930db38..b615f20a 100644
--- a/source-arm/TR-181/board_sbapi/cosa_users_apis.c
+++ b/source-arm/TR-181/board_sbapi/cosa_users_apis.c
@@ -594,7 +594,11 @@ ANSC_STATUS
         char *convertTo = NULL;
         char saltText[128] = {'\0'}, hashedmd[128] = {'\0'};
         int  iIndex = 0, Key_len = 0, salt_len = 0, hashedmd_len = 0;
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
         HMAC_CTX ctx;
+#else
+        HMAC_CTX *pctx = HMAC_CTX_new();
+#endif
         errno_t safec_rc = -1;
         int hashedpassword_size = 128;
 			
@@ -607,10 +611,19 @@ ANSC_STATUS
         Key_len = strlen(pString);
 	
         salt_len = strlen(saltText);
+
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
         HMAC_CTX_init( &ctx);
         HMAC_Init(	 &ctx, pString,  Key_len, EVP_sha256());
         HMAC_Update( &ctx, (unsigned char *)saltText, salt_len);
         HMAC_Final(  &ctx, (unsigned char *)hashedmd, (unsigned int *)&hashedmd_len );
+#else
+        HMAC_CTX_reset (pctx);
+        HMAC_Init(  pctx, pString,  Key_len, EVP_sha256());
+        HMAC_Update( pctx, (unsigned char *)saltText, salt_len);
+        HMAC_Final(  pctx, (unsigned char *)hashedmd, (unsigned int *)&hashedmd_len );
+#endif
+
         convertTo = hashedpassword;
         for (iIndex = 0; iIndex < hashedmd_len; iIndex++) 
         {
@@ -623,7 +636,13 @@ ANSC_STATUS
           convertTo += 2;
           hashedpassword_size -= 2;
         }
+
+#if (OPENSSL_VERSION_NUMBER < 0x10100000L)
         HMAC_CTX_cleanup( &ctx );
+#else
+        HMAC_CTX_free(pctx);
+#endif
+
         CcspTraceWarning(("%s, Returning success\n",__FUNCTION__));	
         return ANSC_STATUS_SUCCESS ;
 
-- 
2.28.0

